{"ast":null,"code":"import\"./ChannelCard.css\";import Button from\"react-bootstrap/Button\";import{VerifiedTooltipLinkDark}from\"../CustomCheckTooltips/CustomCheckTooltips\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ChannelCard(_ref){var imgSrc=_ref.imgSrc,_ref$imgAlt=_ref.imgAlt,imgAlt=_ref$imgAlt===void 0?\"\":_ref$imgAlt,_ref$imgHref=_ref.imgHref,imgHref=_ref$imgHref===void 0?\"#\":_ref$imgHref,views=_ref.views,channelName=_ref.channelName,subscriberCount=_ref.subscriberCount,_ref$channelHref=_ref.channelHref,channelHref=_ref$channelHref===void 0?\"#\":_ref$channelHref,verified=_ref.verified,isSubscribed=_ref.isSubscribed,_ref$outline=_ref.outline,outline=_ref$outline===void 0?false:_ref$outline;var buttonVariant;if(outline){buttonVariant=isSubscribed?\"outline-secondary\":\"outline-danger\";}else{buttonVariant=isSubscribed?\"secondary\":\"danger\";}var buttonText=isSubscribed?\"Subscribed\":\"Subscribe\";return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"channels-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"channels-card-image\",children:[/*#__PURE__*/_jsx(\"a\",{href:imgHref,children:/*#__PURE__*/_jsx(\"img\",{className:\"img-fluid\",src:imgSrc,alt:imgAlt})}),/*#__PURE__*/_jsx(\"div\",{className:\"channels-card-image-btn\",children:/*#__PURE__*/_jsxs(Button,{variant:buttonVariant,children:[buttonText,\" \",/*#__PURE__*/_jsx(\"strong\",{children:views})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"channels-card-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channels-title\",children:/*#__PURE__*/_jsxs(\"a\",{href:channelHref,children:[channelName,\" \",verified?/*#__PURE__*/_jsx(VerifiedTooltipLinkDark,{}):\"\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"channels-view\",children:[subscriberCount,\" subscribers\"]})]})]})});}export default ChannelCard;","map":{"version":3,"sources":["C:/Users/hulus/Desktop/feed/src/components/Atomics/ChannelCard/ChannelCard.js"],"names":["Button","VerifiedTooltipLinkDark","ChannelCard","imgSrc","imgAlt","imgHref","views","channelName","subscriberCount","channelHref","verified","isSubscribed","outline","buttonVariant","buttonText"],"mappings":"AAAA,MAAO,mBAAP,CAEA,MAAOA,CAAAA,MAAP,KAAmB,wBAAnB,CAEA,OAASC,uBAAT,KAAwC,4CAAxC,C,6IAEA,QAASC,CAAAA,WAAT,MAWG,IAVFC,CAAAA,MAUE,MAVFA,MAUE,kBATFC,MASE,CATFA,MASE,sBATO,EASP,+BARFC,OAQE,CARFA,OAQE,uBARQ,GAQR,cAPFC,KAOE,MAPFA,KAOE,CANFC,WAME,MANFA,WAME,CALFC,eAKE,MALFA,eAKE,uBAJFC,WAIE,CAJFA,WAIE,2BAJY,GAIZ,kBAHFC,QAGE,MAHFA,QAGE,CAFFC,YAEE,MAFFA,YAEE,mBADFC,OACE,CADFA,OACE,uBADQ,KACR,cACF,GAAIC,CAAAA,aAAJ,CAEA,GAAID,OAAJ,CAAa,CACZC,aAAa,CAAGF,YAAY,CAAG,mBAAH,CAAyB,gBAArD,CACA,CAFD,IAEO,CACNE,aAAa,CAAGF,YAAY,CAAG,WAAH,CAAiB,QAA7C,CACA,CACD,GAAMG,CAAAA,UAAU,CAAGH,YAAY,CAAG,YAAH,CAAkB,WAAjD,CAEA,mBACC,sCACC,aAAK,SAAS,CAAC,eAAf,wBACC,aAAK,SAAS,CAAC,qBAAf,wBACC,UAAG,IAAI,CAAEN,OAAT,uBACC,YAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAEF,MAAhC,CAAwC,GAAG,CAAEC,MAA7C,EADD,EADD,cAIC,YAAK,SAAS,CAAC,yBAAf,uBACC,MAAC,MAAD,EAAQ,OAAO,CAAES,aAAjB,WACEC,UADF,kBACc,wBAASR,KAAT,EADd,GADD,EAJD,GADD,cAWC,aAAK,SAAS,CAAC,oBAAf,wBACC,YAAK,SAAS,CAAC,gBAAf,uBACC,WAAG,IAAI,CAAEG,WAAT,WACEF,WADF,CACe,GADf,CAEEG,QAAQ,cAAG,KAAC,uBAAD,IAAH,CAAiC,EAF3C,GADD,EADD,cAOC,aAAK,SAAS,CAAC,eAAf,WACEF,eADF,kBAPD,GAXD,GADD,EADD,CA2BA,CAED,cAAeN,CAAAA,WAAf","sourcesContent":["import \"./ChannelCard.css\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { VerifiedTooltipLinkDark } from \"../CustomCheckTooltips/CustomCheckTooltips\";\r\n\r\nfunction ChannelCard({\r\n\timgSrc,\r\n\timgAlt = \"\",\r\n\timgHref = \"#\",\r\n\tviews,\r\n\tchannelName,\r\n\tsubscriberCount,\r\n\tchannelHref = \"#\",\r\n\tverified,\r\n\tisSubscribed,\r\n\toutline = false,\r\n}) {\r\n\tlet buttonVariant;\r\n\r\n\tif (outline) {\r\n\t\tbuttonVariant = isSubscribed ? \"outline-secondary\" : \"outline-danger\";\r\n\t} else {\r\n\t\tbuttonVariant = isSubscribed ? \"secondary\" : \"danger\";\r\n\t}\r\n\tconst buttonText = isSubscribed ? \"Subscribed\" : \"Subscribe\";\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"channels-card\">\r\n\t\t\t\t<div className=\"channels-card-image\">\r\n\t\t\t\t\t<a href={imgHref}>\r\n\t\t\t\t\t\t<img className=\"img-fluid\" src={imgSrc} alt={imgAlt} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<div className=\"channels-card-image-btn\">\r\n\t\t\t\t\t\t<Button variant={buttonVariant}>\r\n\t\t\t\t\t\t\t{buttonText} <strong>{views}</strong>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"channels-card-body\">\r\n\t\t\t\t\t<div className=\"channels-title\">\r\n\t\t\t\t\t\t<a href={channelHref}>\r\n\t\t\t\t\t\t\t{channelName}{\" \"}\r\n\t\t\t\t\t\t\t{verified ? <VerifiedTooltipLinkDark /> : \"\"}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"channels-view\">\r\n\t\t\t\t\t\t{subscriberCount} subscribers\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ChannelCard;\r\n"]},"metadata":{},"sourceType":"module"}