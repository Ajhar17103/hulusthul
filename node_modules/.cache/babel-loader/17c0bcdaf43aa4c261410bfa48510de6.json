{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hulus\\\\Desktop\\\\React\\\\src\\\\components\\\\Atomics\\\\ChannelCard\\\\ChannelCard.js\";\nimport \"./ChannelCard.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { VerifiedTooltipLinkDark } from \"../CustomCheckTooltips/CustomCheckTooltips\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ChannelCard({\n  imgSrc,\n  imgAlt = \"\",\n  imgHref = \"#\",\n  views,\n  channelName,\n  subscriberCount,\n  channelHref = \"#\",\n  verified,\n  isSubscribed,\n  outline = false\n}) {\n  let buttonVariant;\n\n  if (outline) {\n    buttonVariant = isSubscribed ? \"outline-secondary\" : \"outline-danger\";\n  } else {\n    buttonVariant = isSubscribed ? \"secondary\" : \"danger\";\n  }\n\n  const buttonText = isSubscribed ? \"Subscribed\" : \"Subscribe\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channels-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channels-card-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: imgHref,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-fluid\",\n            src: imgSrc,\n            alt: imgAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels-card-image-btn\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: buttonVariant,\n            children: [buttonText, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: views\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channels-card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels-title\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: channelHref,\n            children: [channelName, \" \", verified ? /*#__PURE__*/_jsxDEV(VerifiedTooltipLinkDark, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 20\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels-view\",\n          children: [subscriberCount, \" subscribers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_c = ChannelCard;\nexport default ChannelCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelCard\");","map":{"version":3,"sources":["C:/Users/hulus/Desktop/React/src/components/Atomics/ChannelCard/ChannelCard.js"],"names":["Button","VerifiedTooltipLinkDark","ChannelCard","imgSrc","imgAlt","imgHref","views","channelName","subscriberCount","channelHref","verified","isSubscribed","outline","buttonVariant","buttonText"],"mappings":";AAAA,OAAO,mBAAP;AAEA,OAAOA,MAAP,MAAmB,wBAAnB;AAEA,SAASC,uBAAT,QAAwC,4CAAxC;;;;AAEA,SAASC,WAAT,CAAqB;AACpBC,EAAAA,MADoB;AAEpBC,EAAAA,MAAM,GAAG,EAFW;AAGpBC,EAAAA,OAAO,GAAG,GAHU;AAIpBC,EAAAA,KAJoB;AAKpBC,EAAAA,WALoB;AAMpBC,EAAAA,eANoB;AAOpBC,EAAAA,WAAW,GAAG,GAPM;AAQpBC,EAAAA,QARoB;AASpBC,EAAAA,YAToB;AAUpBC,EAAAA,OAAO,GAAG;AAVU,CAArB,EAWG;AACF,MAAIC,aAAJ;;AAEA,MAAID,OAAJ,EAAa;AACZC,IAAAA,aAAa,GAAGF,YAAY,GAAG,mBAAH,GAAyB,gBAArD;AACA,GAFD,MAEO;AACNE,IAAAA,aAAa,GAAGF,YAAY,GAAG,WAAH,GAAiB,QAA7C;AACA;;AACD,QAAMG,UAAU,GAAGH,YAAY,GAAG,YAAH,GAAkB,WAAjD;AAEA,sBACC;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACC;AAAG,UAAA,IAAI,EAAEN,OAAT;AAAA,iCACC;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,GAAG,EAAEF,MAAhC;AAAwC,YAAA,GAAG,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,iCACC,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAES,aAAjB;AAAA,uBACEC,UADF,oBACc;AAAA,wBAASR;AAAT;AAAA;AAAA;AAAA;AAAA,oBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAWC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACC;AAAG,YAAA,IAAI,EAAEG,WAAT;AAAA,uBACEF,WADF,EACe,GADf,EAEEG,QAAQ,gBAAG,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,oBAAH,GAAiC,EAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAOC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,qBACEF,eADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AA2BA;;KAhDQN,W;AAkDT,eAAeA,WAAf","sourcesContent":["import \"./ChannelCard.css\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { VerifiedTooltipLinkDark } from \"../CustomCheckTooltips/CustomCheckTooltips\";\r\n\r\nfunction ChannelCard({\r\n\timgSrc,\r\n\timgAlt = \"\",\r\n\timgHref = \"#\",\r\n\tviews,\r\n\tchannelName,\r\n\tsubscriberCount,\r\n\tchannelHref = \"#\",\r\n\tverified,\r\n\tisSubscribed,\r\n\toutline = false,\r\n}) {\r\n\tlet buttonVariant;\r\n\r\n\tif (outline) {\r\n\t\tbuttonVariant = isSubscribed ? \"outline-secondary\" : \"outline-danger\";\r\n\t} else {\r\n\t\tbuttonVariant = isSubscribed ? \"secondary\" : \"danger\";\r\n\t}\r\n\tconst buttonText = isSubscribed ? \"Subscribed\" : \"Subscribe\";\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"channels-card\">\r\n\t\t\t\t<div className=\"channels-card-image\">\r\n\t\t\t\t\t<a href={imgHref}>\r\n\t\t\t\t\t\t<img className=\"img-fluid\" src={imgSrc} alt={imgAlt} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<div className=\"channels-card-image-btn\">\r\n\t\t\t\t\t\t<Button variant={buttonVariant}>\r\n\t\t\t\t\t\t\t{buttonText} <strong>{views}</strong>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"channels-card-body\">\r\n\t\t\t\t\t<div className=\"channels-title\">\r\n\t\t\t\t\t\t<a href={channelHref}>\r\n\t\t\t\t\t\t\t{channelName}{\" \"}\r\n\t\t\t\t\t\t\t{verified ? <VerifiedTooltipLinkDark /> : \"\"}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"channels-view\">\r\n\t\t\t\t\t\t{subscriberCount} subscribers\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ChannelCard;\r\n"]},"metadata":{},"sourceType":"module"}